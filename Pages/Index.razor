@page "/"
@page "/{catId:long?}/{pageId:int?}"

@inject NavigationManager NavigationManager
@inject HttpClient Http

@if (newss?.Any() != true)
{
    <span>Loading...</span>
}
else
{
    <div class="row content">
        <div class="col-sm-2 sidenav">
            <!-- Khoản trống làm chuyện khác -->
        </div>
        <div class="col-sm-8">
            <!-- Khu vực nội dung bài viết bao gồm tiêu đề -->
            @foreach (var news in newss)
            {
                <div class="position-relative">
                    <h5>@news.Title</h5>
                    <a class="stretched-link" href=@("Post/"+news.Id)></a>
                    <div>
                        @* Kiểm tra image *@
                        @if (news.ImageLink?.Any() != true)
                        {
                            //Nếu ImageLink rỗng hoặc null thì không làm gì
                            //Ngược lại thì thêm ảnh vào vào
                        }
                        else
                        {
                            <img class="img-fluid mx-auto d-block" src=@news.ImageLink.ElementAt(0).TextLink>
                        }
                        <!-- Canh giữa Image: class="mx-auto d-block" -->
                        <!-- img-fluid responsive image -->

                        <p>@news.Content.ElementAt(0).Text</p>
                    </div>
                </div>
            }
        </div>
        <div class="col-sm-2 sidenav">
            <!-- Khoản trống để quảng cáo ^_^ -->
        </div>
    </div>
    <nav>
        <ul class="pagination justify-content-end">
            <li class="page-item">
                <button @onclick="Previous" disabled=@disabledPrevious type="button"
                    class="btn btn-outline-secondary">Previous</button>
                @* <a class="page-link" href="#" tabindex="-1">Previous</a> *@
            </li>
            @* <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item"><a class="page-link" href="#">2</a></li>
                <li class="page-item"><a class="page-link" href="#">3</a></li> *@
            <li class="page-item">
                <button @onclick="Next" disabled=@disabledNext type="button" class="btn btn-outline-secondary">Next</button>
                @* <a class="btn btn-secondary" @onclick="Next">Next</a> *@
            </li>
        </ul>
    </nav>
}

@code{
    [Parameter]
    public long? catId { get; set; }
    [Parameter]
    public int? pageId { get; set; }
    private List<News> newss;
    private bool disabledPrevious = true;
    private bool disabledNext;
    int countNewss;
    int skip;

    @* protected override async Task OnInitializedAsync()
        {

        } *@

    //Khi Parameter thay đổi
    protected override async Task OnParametersSetAsync()
    {
        //Phân trang, mỗi trang 10 news
        int skip = ((pageId ?? 1) - 1) * 10;
        // Nếu catId không cung cấp, thì cho bằng 0, tức là trang chủ
        catId = catId ?? 0;
        newss = await Http.GetFromJsonAsync<List<News>>($"news/{catId}/{skip}/10");
        countNewss = await Http.GetFromJsonAsync<int>($"news/count/{catId}");
        //Disabled button Previous
        if (skip > 0)
        {
            disabledPrevious = false;
        }
        else
        {
            disabledPrevious = true;
        }

        //Disabled button Next
        if (skip + 10 >= countNewss)
        {
            disabledNext = true;
        }
        else
        {
            disabledNext = false;
        }
    }
    void Next()
    {
        //Điều hướng đến cat và pag mong muốn (nhưng cách này load hơi chậm)
        int pageIdAddOne = (pageId ?? 1) + 1;
        NavigationManager.NavigateTo($"{catId}/{pageIdAddOne}");
    }
    void Previous()
    {

        int pageIdSubOne = (pageId ?? 1) - 1;
        NavigationManager.NavigateTo($"{catId}/{pageIdSubOne}");

    }

}