@page "/"
@page "/Post"
@page "/Post/{id?}"
@inject HttpClient Http

@if (news == null)
{
    <span>Loading...</span>
}
else
{
    <div class="container" style="margin-top:30px">
        <!-- Khu vực nội dung bài viết bao gồm tiêu đề -->
        <h2>@news.Title</h2>
        <hr>
        <div>
          @foreach (var con in contents)
            { 
                if(imageLinks==null){
                        <p>@con.Text</p>
                        continue;
                }

              if(con.Location <( imageLinks.ElementAt(countOfImage)?.Location ??0) ||stop){
                  <p>@con.Text</p>
                  continue;
              }else
              {
                  <img class="mx-auto d-block" src=@imageLinks.ElementAt(countOfImage).TextLink alt="">
                  if(countOfImage+1 < imageLinks.Count )
                  {
                     countOfImage++; 
                  }else{
                      stop = true;
                  }
                  <p>@con.Text</p>
              }
            }
        </div>
        
    </div>
}

@code{
    [Parameter]
    public string id { get; set; }
    private int countOfImage = 0;
    private bool stop = false;
    private List<Content> contents;
    private List<ImageLink> imageLinks =null;
        private News news;
    private long maxLocation;
    protected override async Task OnInitializedAsync()
    {
        id = id ?? "5";
        news = await Http.GetFromJsonAsync<News>($"news/{id}");
        maxLocation = Math.Max(news.ImageLink.Count, news.Content.Count);
        //Sắp xếp lại
        contents = news.Content?.OrderBy(c =>c.Location).ToList();
        //Sắp xếp lại
        imageLinks = news.ImageLink?.OrderBy(c =>c.Location).ToList();
        Console.WriteLine(imageLinks);
    }

}